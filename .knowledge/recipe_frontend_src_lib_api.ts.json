{"is_source_file": true, "format": "TypeScript", "description": "This file provides API wrapper functions for interacting with a recipes backend, including fetching, creating, updating, deleting recipes, and user authentication.", "external_files": ["@/types"], "external_methods": [], "published": ["apiFetch", "listRecipes", "getRecipe", "createRecipe", "updateRecipe", "deleteRecipe", "signInApi"], "classes": [], "methods": [{"name": "export async function apiFetch<T>( apiFetch", "description": "Wraps the fetch API to include JSON handling, error processing, and optional authentication token.", "scope": "", "scopeKind": ""}, {"name": "export async function listRecipes(): Promise<Recipe[]> { listRecipes", "description": "Fetches a list of all recipes from the backend.", "scope": "", "scopeKind": ""}, {"name": "export async function getRecipe(id: string | number): Promise<Recipe> { getRecipe", "description": "Fetches a single recipe by its ID.", "scope": "", "scopeKind": ""}, {"name": "export async function createRecipe(input: RecipeInput, token: string): Promise<Recipe> { createRecipe", "description": "Creates a new recipe with provided input and authorization token.", "scope": "", "scopeKind": ""}, {"name": "export async function updateRecipe(id: string | number, input: RecipeInput, token: string): Prom/ updateRecipe", "description": "Updates an existing recipe identified by ID with new input, requiring authorization.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteRecipe(id: string | number, token: string): Promise<void> { deleteRecipe", "description": "Deletes a recipe identified by ID, requiring authorization.", "scope": "", "scopeKind": ""}, {"name": "export async function signInApi(email: string, password: string): Promise<AuthResponse> { signInApi", "description": "Authenticates a user with email and password, returning an authentication response.", "scope": "", "scopeKind": ""}], "calls": ["fetch", "res.json()", "apiFetch<Recipe[]>", "apiFetch<Recipe>", "apiFetch<Recipe>", "apiFetch<Recipe>", "apiFetch<void>", "apiFetch<AuthResponse>"], "search-terms": ["recipe API", "backend interaction", "recipe CRUD", "authentication"], "state": 2, "file_id": 21, "knowledge_revision": 55, "git_revision": "", "revision_history": [{"47": ""}, {"55": ""}], "ctags": [{"_type": "tag", "name": "BASE", "path": "/home/kavia/workspace/code-generation/recipe-explorer-15334-15343/recipe_frontend/src/lib/api.ts", "pattern": "/^const BASE = process.env.NEXT_PUBLIC_API_BASE_URL || \"\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "apiFetch", "path": "/home/kavia/workspace/code-generation/recipe-explorer-15334-15343/recipe_frontend/src/lib/api.ts", "pattern": "/^export async function apiFetch<T>($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "createRecipe", "path": "/home/kavia/workspace/code-generation/recipe-explorer-15334-15343/recipe_frontend/src/lib/api.ts", "pattern": "/^export async function createRecipe(input: RecipeInput, token: string): Promise<Recipe> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/recipe-explorer-15334-15343/recipe_frontend/src/lib/api.ts", "pattern": "/^      const data = await res.json();$/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}, {"_type": "tag", "name": "deleteRecipe", "path": "/home/kavia/workspace/code-generation/recipe-explorer-15334-15343/recipe_frontend/src/lib/api.ts", "pattern": "/^export async function deleteRecipe(id: string | number, token: string): Promise<void> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getRecipe", "path": "/home/kavia/workspace/code-generation/recipe-explorer-15334-15343/recipe_frontend/src/lib/api.ts", "pattern": "/^export async function getRecipe(id: string | number): Promise<Recipe> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "headers", "path": "/home/kavia/workspace/code-generation/recipe-explorer-15334-15343/recipe_frontend/src/lib/api.ts", "pattern": "/^  const headers: HeadersInit = {$/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}, {"_type": "tag", "name": "listRecipes", "path": "/home/kavia/workspace/code-generation/recipe-explorer-15334-15343/recipe_frontend/src/lib/api.ts", "pattern": "/^export async function listRecipes(): Promise<Recipe[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/recipe-explorer-15334-15343/recipe_frontend/src/lib/api.ts", "pattern": "/^  const res = await fetch(url, { ...options, headers, cache: \"no-store\" });$/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}, {"_type": "tag", "name": "signInApi", "path": "/home/kavia/workspace/code-generation/recipe-explorer-15334-15343/recipe_frontend/src/lib/api.ts", "pattern": "/^export async function signInApi(email: string, password: string): Promise<AuthResponse> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "updateRecipe", "path": "/home/kavia/workspace/code-generation/recipe-explorer-15334-15343/recipe_frontend/src/lib/api.ts", "pattern": "/^export async function updateRecipe(id: string | number, input: RecipeInput, token: string): Prom/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/recipe-explorer-15334-15343/recipe_frontend/src/lib/api.ts", "pattern": "/^  const url = `${BASE}${path}`;$/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}], "hash": "0c596fa3dfebf2f509cc2ea979e8aef4", "format-version": 4, "code-base-name": "recipe_frontend", "filename": "recipe_frontend/src/lib/api.ts"}